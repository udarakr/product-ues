<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Loading Dashboard View" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter JSON to JMX convertor V.1.1. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Default" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">localhost</stringProp>
        <stringProp name="HTTPSampler.port">9443</stringProp>
        <stringProp name="HTTPSampler.connect_timeout">1000000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">1000000</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Load Dashboard View for dashboard with one gadget" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1363247040000</longProp>
        <longProp name="ThreadGroup.end_time">1363247040000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">0</stringProp>
          <stringProp name="RandomTimer.range">100.0</stringProp>
        </UniformRandomTimer>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list"/>
        </AuthManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">admin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">admin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">portal/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Dashboard Number" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">dash</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Dashboard Creation" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Dashboard Path" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="description" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">description</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${dash}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="title" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">title</stringProp>
                  <stringProp name="Argument.value">${dash}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/dashboards/${dash}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://localhost:9443</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.109Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://localhost:9443/portal/create-dashboard</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">5.6000000000000005</stringProp>
              <stringProp name="ConstantTimer.delay">11.200000000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Creating dashboard" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot; : &quot;${dash}&quot;, &quot;title&quot; : &quot;${dash}&quot;, &quot;description&quot; : &quot;&quot;, &quot;permissions&quot; : {&quot;viewers&quot; : [&quot;Internal/everyone&quot;], &quot;editors&quot; : [&quot;Internal/everyone&quot;]}, &quot;pages&quot; : [{&quot;id&quot; : &quot;landing&quot;, &quot;title&quot; : &quot;Home&quot;, &quot;layout&quot; : {&quot;content&quot; : {&quot;loggedIn&quot; : {&quot;blocks&quot; : [{&quot;id&quot; : &quot;a&quot;, &quot;x&quot; : 0, &quot;y&quot; : 0, &quot;width&quot; : 4, &quot;height&quot; : 3}, {&quot;id&quot; : &quot;b&quot;, &quot;x&quot; : 4, &quot;y&quot; : 0, &quot;width&quot; : 4, &quot;height&quot; : 3}, {&quot;id&quot; : &quot;c&quot;, &quot;x&quot; : 8, &quot;y&quot; : 0, &quot;width&quot; : 4, &quot;height&quot; : 3}, {&quot;id&quot; : &quot;d&quot;, &quot;x&quot; : 0, &quot;y&quot; : 3, &quot;width&quot; : 4, &quot;height&quot; : 3}, {&quot;id&quot; : &quot;e&quot;, &quot;x&quot; : 4, &quot;y&quot; : 3, &quot;width&quot; : 4, &quot;height&quot; : 3}, {&quot;id&quot; : &quot;f&quot;, &quot;x&quot; : 8, &quot;y&quot; : 3, &quot;width&quot; : 4, &quot;height&quot; : 3}]}}, &quot;fluidLayout&quot; : false}, &quot;isanon&quot; : false, &quot;content&quot; : {&quot;default&quot; : {&quot;a&quot; : [{&quot;id&quot; : &quot;ueckj0rmfz7fzuxr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}]}, &quot;anon&quot; : {}}}], &quot;identityServerUrl&quot; : &quot;&quot;, &quot;accessTokenUrl&quot; : &quot;&quot;, &quot;apiKey&quot; : &quot;&quot;, &quot;apiSecret&quot; : &quot;&quot;, &quot;theme&quot; : &quot;&quot;, &quot;isUserCustom&quot; : false, &quot;isEditorEnable&quot; : true, &quot;banner&quot; : {&quot;globalBannerExists&quot; : false, &quot;customBannerExists&quot; : false}, &quot;landing&quot; : &quot;landing&quot;, &quot;isanon&quot; : false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/apis/dashboards/${dash}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loading Dashboard View" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Load dashboard view" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/dashboards/${dash}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Render Gadgets" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/2</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">76.80000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">153.60000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename">/home/marcus/Documents/Peformance Tests/Reports/Viewer/Dashboard with one gadget/Response time for view dashboard with one gadget.csv</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename">/home/marcus/Documents/Peformance Tests/Reports/Viewer/Dashboard with one gadget/Graph result for load in dashboard with one gadget.csv</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deleting Dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">portal/apis/dashboards/${dash}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">/home/marcus/Documents/Peformance Tests/Reports/Viewer/Dashboard with one gadget/Summary Result for view dashboard with one gadget.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Load Dashboard View for dashboard with ten gadgets" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1453704718000</longProp>
        <longProp name="ThreadGroup.end_time">1453704718000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">0</stringProp>
          <stringProp name="RandomTimer.range">100.0</stringProp>
        </UniformRandomTimer>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list"/>
        </AuthManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">admin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">admin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">portal/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">101</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">dash</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Dashboard Creation" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Dashboard Path" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="description" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">description</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${dash}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="title" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">title</stringProp>
                  <stringProp name="Argument.value">${dash}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/dashboards/${dash}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://localhost:9443</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.109Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://localhost:9443/portal/create-dashboard</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">5.6000000000000005</stringProp>
              <stringProp name="ConstantTimer.delay">11.200000000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Creating dashboard" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot; : &quot;${dash}&quot;, &quot;title&quot; : &quot;${dash}&quot;, &quot;description&quot; : &quot;&quot;, &quot;permissions&quot; : {&quot;viewers&quot; : [&quot;Internal/everyone&quot;], &quot;editors&quot; : [&quot;Internal/everyone&quot;]}, &quot;pages&quot; : [{&quot;id&quot; : &quot;landing&quot;, &quot;title&quot; : &quot;Home&quot;, &quot;layout&quot; : {&quot;content&quot; : {&quot;loggedIn&quot; : {&quot;blocks&quot; : [{&quot;id&quot; : &quot;a&quot;, &quot;x&quot; : 8, &quot;y&quot; : 6, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;b&quot;, &quot;x&quot; : 4, &quot;y&quot; : 0, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;c&quot;, &quot;x&quot; : 8, &quot;y&quot; : 0, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;d&quot;, &quot;x&quot; : 4, &quot;y&quot; : 6, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;e&quot;, &quot;x&quot; : 4, &quot;y&quot; : 3, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;f&quot;, &quot;x&quot; : 8, &quot;y&quot; : 3, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;19804d855761be3458c6149a25caea7b&quot;, &quot;x&quot; : 0, &quot;y&quot; : 9, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;41ccbc51714c8a770de46d42d3c9d7a4&quot;, &quot;x&quot; : 0, &quot;y&quot; : 6, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;28459794bbdef71780c3e0f6eb8aba5d&quot;, &quot;x&quot; : 0, &quot;y&quot; : 3, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;772d6502d3a5d37de7f0174a833211e4&quot;, &quot;x&quot; : 0, &quot;y&quot; : 0, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}]}}, &quot;fluidLayout&quot; : false}, &quot;isanon&quot; : false, &quot;content&quot; : {&quot;default&quot; : {&quot;a&quot; : [{&quot;id&quot; : &quot;qj1hm935km0ftj4i&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;b&quot; : [{&quot;id&quot; : &quot;ka5zdyo42eh77gb9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;c&quot; : [{&quot;id&quot; : &quot;7ogm4qivyl48to6r&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;d&quot; : [{&quot;id&quot; : &quot;yjrmv0e49fqolxr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;e&quot; : [{&quot;id&quot; : &quot;9e533bh3c89cc8fr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;f&quot; : [{&quot;id&quot; : &quot;hkqdfxks0i6yldi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;19804d855761be3458c6149a25caea7b&quot; : [{&quot;id&quot; : &quot;otlokgid2sps0pb9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;41ccbc51714c8a770de46d42d3c9d7a4&quot; : [{&quot;id&quot; : &quot;g4d306q44peyu8fr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;28459794bbdef71780c3e0f6eb8aba5d&quot; : [{&quot;id&quot; : &quot;agriwnpmyzj8aor&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;772d6502d3a5d37de7f0174a833211e4&quot; : [{&quot;id&quot; : &quot;j902o6ntkjxos9k9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}]}, &quot;anon&quot; : {}}}], &quot;identityServerUrl&quot; : &quot;&quot;, &quot;accessTokenUrl&quot; : &quot;&quot;, &quot;apiKey&quot; : &quot;&quot;, &quot;apiSecret&quot; : &quot;&quot;, &quot;theme&quot; : &quot;&quot;, &quot;isUserCustom&quot; : false, &quot;isEditorEnable&quot; : true, &quot;banner&quot; : {&quot;globalBannerExists&quot; : false, &quot;customBannerExists&quot; : false}, &quot;landing&quot; : &quot;landing&quot;, &quot;isanon&quot; : false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/apis/dashboards/${dash}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="View Dashboard with 10 gadgets" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Load view dashboard" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/dashboards/${dash}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shinding load gadget one" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">65.60000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">131.20000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shindig load gadget two" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shindig load gadget three" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shindig load gadget six" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shindig load gadget four" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shindig load gadget five" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">4.0</stringProp>
              <stringProp name="ConstantTimer.delay">8.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shindig load gadget seven" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shindig load gadget eight" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shindig load gadget nine" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shindig load gadget ten" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename">/home/marcus/Documents/Peformance Tests/Reports/Viewer/Dashboard with ten gadgets/Response time for view dashboard with ten gadget.csv</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename">/home/marcus/Documents/Peformance Tests/Reports/Viewer/Dashboard with ten gadgets/Graph result for load in dashboard with ten gadget.csv</stringProp>
          </ResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">portal/apis/dashboards/${dash}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">/home/marcus/Documents/Peformance Tests/Reports/Viewer/Dashboard with ten gadgets/Summary Result for view dashboard with ten gadget.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Load Dashboard View for dashboard with hundred gadgets" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1363247040000</longProp>
        <longProp name="ThreadGroup.end_time">1363247040000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">0</stringProp>
          <stringProp name="RandomTimer.range">100.0</stringProp>
        </UniformRandomTimer>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list"/>
        </AuthManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">false</boolProp>
        </CacheManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">admin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">admin</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="destination" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">dashboards</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">destination</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">portal/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">dash</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Dashboard Creation" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Dashboard Path" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="description" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">description</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">${dash}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="title" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">title</stringProp>
                  <stringProp name="Argument.value">${dash}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/dashboards/${dash}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://localhost:9443</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.109Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://localhost:9443/portal/create-dashboard</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">5.6000000000000005</stringProp>
              <stringProp name="ConstantTimer.delay">11.200000000000001</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Creating dashboard" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;id&quot; : &quot;${dash}&quot;, &quot;title&quot; : &quot;${dash}&quot;, &quot;description&quot; : &quot;&quot;, &quot;permissions&quot; : {&quot;viewers&quot; : [&quot;Internal/everyone&quot;], &quot;editors&quot; : [&quot;Internal/everyone&quot;]}, &quot;pages&quot; : [{&quot;id&quot; : &quot;landing&quot;, &quot;title&quot; : &quot;Home&quot;, &quot;layout&quot; : {&quot;content&quot; : {&quot;loggedIn&quot; : {&quot;blocks&quot; : [{&quot;id&quot; : &quot;a&quot;, &quot;x&quot; : 4, &quot;y&quot; : 60, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;b&quot;, &quot;x&quot; : 4, &quot;y&quot; : 0, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;c&quot;, &quot;x&quot; : 8, &quot;y&quot; : 0, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;d&quot;, &quot;x&quot; : 8, &quot;y&quot; : 9, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;e&quot;, &quot;x&quot; : 4, &quot;y&quot; : 3, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;f&quot;, &quot;x&quot; : 8, &quot;y&quot; : 3, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;4c05a5ac9e6d2e6a478606c20709a0f1&quot;, &quot;x&quot; : 4, &quot;y&quot; : 6, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;6b9a423ae5b8fa7f588e911b1ffbb093&quot;, &quot;x&quot; : 8, &quot;y&quot; : 6, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;e17b577279cd6dc08134f4f392be6507&quot;, &quot;x&quot; : 4, &quot;y&quot; : 24, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;d59286acfd72327249e38b6f726f7a72&quot;, &quot;x&quot; : 8, &quot;y&quot; : 24, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;586c5f13e7b4bbe9f973b51c043f3617&quot;, &quot;x&quot; : 8, &quot;y&quot; : 60, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;e863b2fef445c1ad2f206c3a5eb5ff28&quot;, &quot;x&quot; : 4, &quot;y&quot; : 21, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;557daaeda02839040090e262db1193fa&quot;, &quot;x&quot; : 8, &quot;y&quot; : 21, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;c5cb30a85431520c491f84b2cd67225f&quot;, &quot;x&quot; : 4, &quot;y&quot; : 96, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;5fffbaad078cc251414b10dddeec1942&quot;, &quot;x&quot; : 4, &quot;y&quot; : 18, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;d4df2d90399e599fac2b41261a7f71b5&quot;, &quot;x&quot; : 8, &quot;y&quot; : 18, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;167fc44dfee23b1888d3b8f0b72da7d2&quot;, &quot;x&quot; : 4, &quot;y&quot; : 57, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;69815c426d62b719f808b298d723cb5e&quot;, &quot;x&quot; : 4, &quot;y&quot; : 15, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;297806acf150a708549cd9c964dc4e6e&quot;, &quot;x&quot; : 8, &quot;y&quot; : 15, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;e616d471f3719b00d0f465e568b00076&quot;, &quot;x&quot; : 8, &quot;y&quot; : 57, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;334f0dfd3605359f04ca625aba66887e&quot;, &quot;x&quot; : 4, &quot;y&quot; : 12, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;5a4971ce5f5fbceffa2179bf82dde4dd&quot;, &quot;x&quot; : 8, &quot;y&quot; : 12, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;c73cc8f4d076792aa5652b25e962dffa&quot;, &quot;x&quot; : 8, &quot;y&quot; : 96, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;210b9dd25c85ea9140f446f79a0082bd&quot;, &quot;x&quot; : 4, &quot;y&quot; : 9, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;76b4292e8c03fdd0f5e425cc4bae9a5c&quot;, &quot;x&quot; : 4, &quot;y&quot; : 54, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;63771ac05d142f8ffd7645cef5087572&quot;, &quot;x&quot; : 8, &quot;y&quot; : 54, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;9e06c56a8ca17d79f5125f787b5c1afe&quot;, &quot;x&quot; : 0, &quot;y&quot; : 99, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;55e681e462d053850df1e8ec9ede22a6&quot;, &quot;x&quot; : 4, &quot;y&quot; : 51, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;6355b068b803856d5e43b1e86d3ab310&quot;, &quot;x&quot; : 8, &quot;y&quot; : 51, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;ef77658f9c1c0994aeefe1bdaef2a144&quot;, &quot;x&quot; : 4, &quot;y&quot; : 93, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;b3cc7b4a240c0caaee294f1994434e28&quot;, &quot;x&quot; : 4, &quot;y&quot; : 48, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;b57b18d3c033178ca09fd66830db7b16&quot;, &quot;x&quot; : 8, &quot;y&quot; : 48, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;19028c52c6eb472bfb989ee4dff8e114&quot;, &quot;x&quot; : 8, &quot;y&quot; : 93, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;2b0aa10cc6ffd6459192d3ae6b39ab88&quot;, &quot;x&quot; : 4, &quot;y&quot; : 45, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;b281863d7bb6f9f0f58d1aef477280ce&quot;, &quot;x&quot; : 8, &quot;y&quot; : 45, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;17a29a13ca4adafd03f47244cfee1d4f&quot;, &quot;x&quot; : 0, &quot;y&quot; : 96, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;8f7a10e1f3bd82ad8b5f1b2e99b76153&quot;, &quot;x&quot; : 4, &quot;y&quot; : 42, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;335333bf0767928302bcceb217a6b15f&quot;, &quot;x&quot; : 8, &quot;y&quot; : 42, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;a225182c9d1ae7099e491b4d14a14851&quot;, &quot;x&quot; : 4, &quot;y&quot; : 90, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;a5e828bbfe635d5a69d5bd396a69632d&quot;, &quot;x&quot; : 4, &quot;y&quot; : 39, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;c846c7d195b0a56222133adcdbe78c45&quot;, &quot;x&quot; : 8, &quot;y&quot; : 39, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;6523e88a8bece761e9c80061bb2c09d5&quot;, &quot;x&quot; : 8, &quot;y&quot; : 90, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;c461986d88734ef464cbb88e9cbeb205&quot;, &quot;x&quot; : 4, &quot;y&quot; : 36, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;f74fbf4a11d544f4f829d364dc6bb7b8&quot;, &quot;x&quot; : 8, &quot;y&quot; : 36, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;4965a7b5e1f76d0e9c93a58f96eaf613&quot;, &quot;x&quot; : 0, &quot;y&quot; : 93, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;5e56c0dcc3b391f4b313ac519944b9d2&quot;, &quot;x&quot; : 4, &quot;y&quot; : 33, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;abee38b97bfd645108810039d40c0537&quot;, &quot;x&quot; : 8, &quot;y&quot; : 33, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;a01a51f0985e62ee9a984155fb0e9d2f&quot;, &quot;x&quot; : 4, &quot;y&quot; : 87, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;887e57eeb36c3bd0f8b816b6e1d39b53&quot;, &quot;x&quot; : 4, &quot;y&quot; : 30, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;d15cd2e90c806d010be339ebbd117674&quot;, &quot;x&quot; : 8, &quot;y&quot; : 30, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;173468d4e3e3e32e30768061f1d533a5&quot;, &quot;x&quot; : 8, &quot;y&quot; : 87, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;03c2d56c1243624a573b6132477b0e00&quot;, &quot;x&quot; : 4, &quot;y&quot; : 27, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;4af1ac5608c9c890451d346ca4a27b3f&quot;, &quot;x&quot; : 8, &quot;y&quot; : 27, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;3349a1e2b2068318154a8b73981704a8&quot;, &quot;x&quot; : 0, &quot;y&quot; : 90, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;7b2cd936db160c03405ee880a71922b4&quot;, &quot;x&quot; : 4, &quot;y&quot; : 84, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;019036a263aa2fafbb6b3718be44d12e&quot;, &quot;x&quot; : 8, &quot;y&quot; : 84, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;20f6bbd9a254088fd9b1b59f2036e127&quot;, &quot;x&quot; : 0, &quot;y&quot; : 87, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;886126e884672a9166566be1ab3abafe&quot;, &quot;x&quot; : 4, &quot;y&quot; : 81, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;7236b9909b4b981435ba849090ac90c9&quot;, &quot;x&quot; : 8, &quot;y&quot; : 81, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;52af15a9de94dbf6adbdda87a89c73f0&quot;, &quot;x&quot; : 0, &quot;y&quot; : 84, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;14ef871d2e3dd6f8101b73eb3308a622&quot;, &quot;x&quot; : 4, &quot;y&quot; : 78, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;95835fdbc9a01788897fe6a67f9160f0&quot;, &quot;x&quot; : 8, &quot;y&quot; : 78, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;6e70efa1ed2b9acb54dee45ec6262cbe&quot;, &quot;x&quot; : 0, &quot;y&quot; : 81, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;6fd26bef7f0cdcd90fcdfa6fe2d87c1a&quot;, &quot;x&quot; : 4, &quot;y&quot; : 75, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;680e7502c6aeb62ba7f04cd9123f696d&quot;, &quot;x&quot; : 8, &quot;y&quot; : 75, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;3262022ec67340d1a4cba30f7491b78e&quot;, &quot;x&quot; : 0, &quot;y&quot; : 78, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;fae3cd658a020890223c835a1617fa69&quot;, &quot;x&quot; : 4, &quot;y&quot; : 72, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;327a72595d53825158e4336933f74379&quot;, &quot;x&quot; : 8, &quot;y&quot; : 72, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;923846051c609bb5c2663113e6735686&quot;, &quot;x&quot; : 0, &quot;y&quot; : 75, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;c3d37d9610531b6e0a8fd702bdc8c57b&quot;, &quot;x&quot; : 4, &quot;y&quot; : 69, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;6fb6bb7672a6cc82143435cdc6777a58&quot;, &quot;x&quot; : 8, &quot;y&quot; : 69, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;f53353705d95b3c8727c338bc1a22833&quot;, &quot;x&quot; : 0, &quot;y&quot; : 72, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;58a078ffaff3881d6ed9dcb0b21f6b36&quot;, &quot;x&quot; : 4, &quot;y&quot; : 66, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;ecbfe0bce84e11bc551526b9ab4fac9e&quot;, &quot;x&quot; : 8, &quot;y&quot; : 66, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;e28c854b068d94dda9face609335178d&quot;, &quot;x&quot; : 0, &quot;y&quot; : 69, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;3b293fcb6d1c6462e68983b39384ad58&quot;, &quot;x&quot; : 4, &quot;y&quot; : 63, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;1bfa9c1a6879ff5913c9dc9eae23c752&quot;, &quot;x&quot; : 8, &quot;y&quot; : 63, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;cec4f71225d091bda3a2e07d87ec2d2a&quot;, &quot;x&quot; : 0, &quot;y&quot; : 66, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;6bf544c4c1eb39804a59fb463c8d02e4&quot;, &quot;x&quot; : 0, &quot;y&quot; : 63, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;18fd41a6436bc33cccb8fcc6b62fa485&quot;, &quot;x&quot; : 0, &quot;y&quot; : 60, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;b06a4683e06e5f787e7c29f0ff1ed8d6&quot;, &quot;x&quot; : 0, &quot;y&quot; : 57, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;e3a08d4afb99e7016a6fd79fdd9afaab&quot;, &quot;x&quot; : 0, &quot;y&quot; : 54, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;ac1c22479ca9d343d248b90abdbc8a7e&quot;, &quot;x&quot; : 0, &quot;y&quot; : 51, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;06c627f8500861a61dbda745290b09f1&quot;, &quot;x&quot; : 0, &quot;y&quot; : 48, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;78f92699f03ddba26a7cae82edf52d48&quot;, &quot;x&quot; : 0, &quot;y&quot; : 45, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;6f36521ca5d2260a55e6774baa40ff84&quot;, &quot;x&quot; : 0, &quot;y&quot; : 42, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;6b91b3b829de3471e2e0ade473f9fad5&quot;, &quot;x&quot; : 0, &quot;y&quot; : 39, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;1f181db869a2a3cef92a991cc4f948b4&quot;, &quot;x&quot; : 0, &quot;y&quot; : 36, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;0f0f9c22bb9332e7940fdda51ad39e72&quot;, &quot;x&quot; : 0, &quot;y&quot; : 33, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;45dccb03b21d0e5014292f92d71a50ab&quot;, &quot;x&quot; : 0, &quot;y&quot; : 30, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;e8f7671fc969ef18321d183d579bb612&quot;, &quot;x&quot; : 0, &quot;y&quot; : 27, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;3a1a8a0d09fb0907df5ce73a345fee6a&quot;, &quot;x&quot; : 0, &quot;y&quot; : 24, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;ea4428a2420f193b3d22f78dd4990b0b&quot;, &quot;x&quot; : 0, &quot;y&quot; : 21, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;d5ff55532dbb4bd83c3221903fa65294&quot;, &quot;x&quot; : 0, &quot;y&quot; : 18, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;03f9dad512a2983401183afd13077c0f&quot;, &quot;x&quot; : 0, &quot;y&quot; : 15, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;de22a0d1c5b8fa1c133646ccc1bef323&quot;, &quot;x&quot; : 0, &quot;y&quot; : 12, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;857ee0c0dcd08d99d8e2bb432fa22e53&quot;, &quot;x&quot; : 0, &quot;y&quot; : 9, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;35cf543f3649b7bd3c2abc94e7571c75&quot;, &quot;x&quot; : 0, &quot;y&quot; : 6, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;8f66a5b932f1572572bcb58fa5d08885&quot;, &quot;x&quot; : 0, &quot;y&quot; : 3, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}, {&quot;id&quot; : &quot;8d4310e2425d99d2adb01a56f8b8164e&quot;, &quot;x&quot; : 0, &quot;y&quot; : 0, &quot;width&quot; : 4, &quot;height&quot; : 3, &quot;banner&quot; : false}]}}, &quot;fluidLayout&quot; : false}, &quot;isanon&quot; : false, &quot;content&quot; : {&quot;default&quot; : {&quot;a&quot; : [{&quot;id&quot; : &quot;0u2vl1rojvw019k9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;b&quot; : [{&quot;id&quot; : &quot;0yaabbkg1xidlsor&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;c&quot; : [{&quot;id&quot; : &quot;n138p4vpw1xlxr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;d&quot; : [{&quot;id&quot; : &quot;vh3rc59q9qeel8fr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;e&quot; : [{&quot;id&quot; : &quot;vcxt6nm1qxueg66r&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;f&quot; : [{&quot;id&quot; : &quot;k124id0nj1lcjtt9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;4c05a5ac9e6d2e6a478606c20709a0f1&quot; : [{&quot;id&quot; : &quot;0a2df2n1oxl2fbt9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;6b9a423ae5b8fa7f588e911b1ffbb093&quot; : [{&quot;id&quot; : &quot;aeq2nxdvb7ggy14i&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;e17b577279cd6dc08134f4f392be6507&quot; : [{&quot;id&quot; : &quot;nkdavsyk7xwuq5mi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;d59286acfd72327249e38b6f726f7a72&quot; : [{&quot;id&quot; : &quot;tani2fjnkgo80k9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;586c5f13e7b4bbe9f973b51c043f3617&quot; : [{&quot;id&quot; : &quot;asxefus1bncul3di&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;e863b2fef445c1ad2f206c3a5eb5ff28&quot; : [{&quot;id&quot; : &quot;j9ku57c74zi1kyb9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;557daaeda02839040090e262db1193fa&quot; : [{&quot;id&quot; : &quot;23l671f819vn29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;c5cb30a85431520c491f84b2cd67225f&quot; : [{&quot;id&quot; : &quot;vdlu5x1fwn2n8kt9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;5fffbaad078cc251414b10dddeec1942&quot; : [{&quot;id&quot; : &quot;o753xf52gqppsyvi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;d4df2d90399e599fac2b41261a7f71b5&quot; : [{&quot;id&quot; : &quot;c8dfzz5vdk6b6gvi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;167fc44dfee23b1888d3b8f0b72da7d2&quot; : [{&quot;id&quot; : &quot;u2lrctz9adr6bt9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;69815c426d62b719f808b298d723cb5e&quot; : [{&quot;id&quot; : &quot;0xhzp1lsav8ia4i&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;297806acf150a708549cd9c964dc4e6e&quot; : [{&quot;id&quot; : &quot;w0z9clcuvv0ftj4i&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;e616d471f3719b00d0f465e568b00076&quot; : [{&quot;id&quot; : &quot;uje7uo5frok73nmi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;334f0dfd3605359f04ca625aba66887e&quot; : [{&quot;id&quot; : &quot;4qrculiai7ctyb9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;5a4971ce5f5fbceffa2179bf82dde4dd&quot; : [{&quot;id&quot; : &quot;qmst3ycarj79o1or&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;c73cc8f4d076792aa5652b25e962dffa&quot; : [{&quot;id&quot; : &quot;zgkdsh9skhrdlsor&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;210b9dd25c85ea9140f446f79a0082bd&quot; : [{&quot;id&quot; : &quot;jug4j9hg33ow29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;76b4292e8c03fdd0f5e425cc4bae9a5c&quot; : [{&quot;id&quot; : &quot;se8ojq3qog2b7qfr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;63771ac05d142f8ffd7645cef5087572&quot; : [{&quot;id&quot; : &quot;w7myy1segxrvbo6r&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;9e06c56a8ca17d79f5125f787b5c1afe&quot; : [{&quot;id&quot; : &quot;ramj6b06tiroogvi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;55e681e462d053850df1e8ec9ede22a6&quot; : [{&quot;id&quot; : &quot;k2tmxwaxr3k57b9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;6355b068b803856d5e43b1e86d3ab310&quot; : [{&quot;id&quot; : &quot;5tffv8gijx2prpb9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;ef77658f9c1c0994aeefe1bdaef2a144&quot; : [{&quot;id&quot; : &quot;o2ml55ef3se2ke29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;b3cc7b4a240c0caaee294f1994434e28&quot; : [{&quot;id&quot; : &quot;ex8hxzxcjq2p4x6r&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;b57b18d3c033178ca09fd66830db7b16&quot; : [{&quot;id&quot; : &quot;02wtuwhjgcm4e7b9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;19028c52c6eb472bfb989ee4dff8e114&quot; : [{&quot;id&quot; : &quot;tv6tnfbopm5z5mi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;2b0aa10cc6ffd6459192d3ae6b39ab88&quot; : [{&quot;id&quot; : &quot;h7nuk3k65cmr6bt9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;b281863d7bb6f9f0f58d1aef477280ce&quot; : [{&quot;id&quot; : &quot;5ck3hi4ts985b3xr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;17a29a13ca4adafd03f47244cfee1d4f&quot; : [{&quot;id&quot; : &quot;3hys67jiuw6rbe29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;8f7a10e1f3bd82ad8b5f1b2e99b76153&quot; : [{&quot;id&quot; : &quot;qpeoyx1q2949rudi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;335333bf0767928302bcceb217a6b15f&quot; : [{&quot;id&quot; : &quot;zy9onnc2pyn6zuxr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;a225182c9d1ae7099e491b4d14a14851&quot; : [{&quot;id&quot; : &quot;2db7jtgfa1w0zfr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;a5e828bbfe635d5a69d5bd396a69632d&quot; : [{&quot;id&quot; : &quot;5ifz2rwmu3ow29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;c846c7d195b0a56222133adcdbe78c45&quot; : [{&quot;id&quot; : &quot;h4npvoeyksurf6r&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;6523e88a8bece761e9c80061bb2c09d5&quot; : [{&quot;id&quot; : &quot;l7h2bkg1xidlsor&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;c461986d88734ef464cbb88e9cbeb205&quot; : [{&quot;id&quot; : &quot;bcp05nlahu0afw29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;f74fbf4a11d544f4f829d364dc6bb7b8&quot; : [{&quot;id&quot; : &quot;asovdznxtkjra4i&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;4965a7b5e1f76d0e9c93a58f96eaf613&quot; : [{&quot;id&quot; : &quot;3w1ay1mu57co9a4i&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;5e56c0dcc3b391f4b313ac519944b9d2&quot; : [{&quot;id&quot; : &quot;8qmaosq4blp1ra4i&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;abee38b97bfd645108810039d40c0537&quot; : [{&quot;id&quot; : &quot;rmbknnt3t97tx1or&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;a01a51f0985e62ee9a984155fb0e9d2f&quot; : [{&quot;id&quot; : &quot;ajsjafweriaiqkt9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;887e57eeb36c3bd0f8b816b6e1d39b53&quot; : [{&quot;id&quot; : &quot;pzfzerb84t4t2o6r&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;d15cd2e90c806d010be339ebbd117674&quot; : [{&quot;id&quot; : &quot;lnjm2gjrc1dlhaor&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;173468d4e3e3e32e30768061f1d533a5&quot; : [{&quot;id&quot; : &quot;g3gngev7abjfw29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;03c2d56c1243624a573b6132477b0e00&quot; : [{&quot;id&quot; : &quot;cmcd1rwj7jznz5mi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;4af1ac5608c9c890451d346ca4a27b3f&quot; : [{&quot;id&quot; : &quot;jwiylmeopyg2pgb9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;3349a1e2b2068318154a8b73981704a8&quot; : [{&quot;id&quot; : &quot;ofinwfs3oesqyqfr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;7b2cd936db160c03405ee880a71922b4&quot; : [{&quot;id&quot; : &quot;17cfs606hzwfusor&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;019036a263aa2fafbb6b3718be44d12e&quot; : [{&quot;id&quot; : &quot;j7oeyy0la0pb9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;20f6bbd9a254088fd9b1b59f2036e127&quot; : [{&quot;id&quot; : &quot;wj1ouetabiq9f6r&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;886126e884672a9166566be1ab3abafe&quot; : [{&quot;id&quot; : &quot;es0wp7zj1370hpvi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;7236b9909b4b981435ba849090ac90c9&quot; : [{&quot;id&quot; : &quot;vop2rmnvq736jemi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;52af15a9de94dbf6adbdda87a89c73f0&quot; : [{&quot;id&quot; : &quot;2tfq22vn5hxjq0k9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;14ef871d2e3dd6f8101b73eb3308a622&quot; : [{&quot;id&quot; : &quot;uwazsxi1hpdp9zfr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;95835fdbc9a01788897fe6a67f9160f0&quot; : [{&quot;id&quot; : &quot;mqpb4ok8lbejc3di&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;6e70efa1ed2b9acb54dee45ec6262cbe&quot; : [{&quot;id&quot; : &quot;mtk0wrgn1x94fgvi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;6fd26bef7f0cdcd90fcdfa6fe2d87c1a&quot; : [{&quot;id&quot; : &quot;934vy4pwjyca0pb9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;680e7502c6aeb62ba7f04cd9123f696d&quot; : [{&quot;id&quot; : &quot;bisr4i03pcm4e7b9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;3262022ec67340d1a4cba30f7491b78e&quot; : [{&quot;id&quot; : &quot;iauky9s3926b6gvi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;fae3cd658a020890223c835a1617fa69&quot; : [{&quot;id&quot; : &quot;a8fgevxzpdivbo6r&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;327a72595d53825158e4336933f74379&quot; : [{&quot;id&quot; : &quot;0pilv26kh8v9529&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;923846051c609bb5c2663113e6735686&quot; : [{&quot;id&quot; : &quot;54nq20njwfef80k9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;c3d37d9610531b6e0a8fd702bdc8c57b&quot; : [{&quot;id&quot; : &quot;rtss2pbmgjo9wwmi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;6fb6bb7672a6cc82143435cdc6777a58&quot; : [{&quot;id&quot; : &quot;fc8e4ggsuwxt7qfr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;f53353705d95b3c8727c338bc1a22833&quot; : [{&quot;id&quot; : &quot;nka6z2urclufecdi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;58a078ffaff3881d6ed9dcb0b21f6b36&quot; : [{&quot;id&quot; : &quot;04t4t86v0lvdkj4i&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;ecbfe0bce84e11bc551526b9ab4fac9e&quot; : [{&quot;id&quot; : &quot;im9jhr20q5i885mi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;e28c854b068d94dda9face609335178d&quot; : [{&quot;id&quot; : &quot;rrtmodlzxfzgp66r&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;3b293fcb6d1c6462e68983b39384ad58&quot; : [{&quot;id&quot; : &quot;8j1rxrlqdrmp9zfr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;1bfa9c1a6879ff5913c9dc9eae23c752&quot; : [{&quot;id&quot; : &quot;isds2l5za7hhyqfr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;cec4f71225d091bda3a2e07d87ec2d2a&quot; : [{&quot;id&quot; : &quot;7pesod9lbpkl0udi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;6bf544c4c1eb39804a59fb463c8d02e4&quot; : [{&quot;id&quot; : &quot;cyaa9lkeiw2q33di&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;18fd41a6436bc33cccb8fcc6b62fa485&quot; : [{&quot;id&quot; : &quot;j1i5g1yktke29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;b06a4683e06e5f787e7c29f0ff1ed8d6&quot; : [{&quot;id&quot; : &quot;h336dcn3kfixjemi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;e3a08d4afb99e7016a6fd79fdd9afaab&quot; : [{&quot;id&quot; : &quot;qiqs1bmmpxas8aor&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;ac1c22479ca9d343d248b90abdbc8a7e&quot; : [{&quot;id&quot; : &quot;otoyjiwugt8uayvi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;06c627f8500861a61dbda745290b09f1&quot; : [{&quot;id&quot; : &quot;7xdeqm9rqdc59udi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;78f92699f03ddba26a7cae82edf52d48&quot; : [{&quot;id&quot; : &quot;tlox554fas1w0zfr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;6f36521ca5d2260a55e6774baa40ff84&quot; : [{&quot;id&quot; : &quot;43n2iw85wn7mn29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;6b91b3b829de3471e2e0ade473f9fad5&quot; : [{&quot;id&quot; : &quot;89u0frzl57vw8kt9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;1f181db869a2a3cef92a991cc4f948b4&quot; : [{&quot;id&quot; : &quot;3sbzafysk6wjc3di&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;0f0f9c22bb9332e7940fdda51ad39e72&quot; : [{&quot;id&quot; : &quot;briel3nxiuihehfr&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;45dccb03b21d0e5014292f92d71a50ab&quot; : [{&quot;id&quot; : &quot;pn7muwfqdphtcsor&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;e8f7671fc969ef18321d183d579bb612&quot; : [{&quot;id&quot; : &quot;xjqtg1bplc95dn29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;publisher&quot;, &quot;title&quot; : &quot;Publisher&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;category&quot; : &quot;Publishers&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/publisher/index.xml&quot;}, &quot;notify&quot; : {&quot;publisher&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;This notifies message generated in publisher&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Publisher&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;3a1a8a0d09fb0907df5ce73a345fee6a&quot; : [{&quot;id&quot; : &quot;ff52ukevi6rh33di&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-range-picker&quot;, &quot;title&quot; : &quot;Date Range Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/date-range-picker/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-range-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Range Picker&quot;}, &quot;notify&quot; : {&quot;range-selected&quot; : {&quot;type&quot; : &quot;date-range&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;ea4428a2420f193b3d22f78dd4990b0b&quot; : [{&quot;id&quot; : &quot;duv4f4ee5xez5mi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;date-picker&quot;, &quot;title&quot; : &quot;Date Picker&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;local://images/gadgetIcon.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/date-picker/index.xml&quot;}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Date Picker&quot;}, &quot;notify&quot; : {&quot;select&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;d5ff55532dbb4bd83c3221903fa65294&quot; : [{&quot;id&quot; : &quot;zdfmaxcyl2tke29&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;textbox&quot;, &quot;title&quot; : &quot;Text Box&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Widgets&quot;, &quot;thumbnail&quot; : &quot;store://gadget/textbox/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/textbox/index.xml&quot;}, &quot;options&quot; : {&quot;content&quot; : {&quot;type&quot; : &quot;text&quot;, &quot;title&quot; : &quot;Content&quot;, &quot;value&quot; : &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;styles&quot; : {&quot;borders&quot; : false, &quot;title&quot; : &quot;Text Box&quot;}, &quot;locale_titles&quot; : {}}}], &quot;03f9dad512a2983401183afd13077c0f&quot; : [{&quot;id&quot; : &quot;q0ke7bro5owuq5mi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;subscriber&quot;, &quot;title&quot; : &quot;Subscriber&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;category&quot; : &quot;Subscribers&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/subscriber/index.xml&quot;}, &quot;listen&quot; : {&quot;subscriber&quot; : {&quot;type&quot; : &quot;message&quot;, &quot;description&quot; : &quot;Used to listen to Any message of type address&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;Subscriber&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}}], &quot;de22a0d1c5b8fa1c133646ccc1bef323&quot; : [{&quot;id&quot; : &quot;awwbewkb0e50o1or&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;857ee0c0dcd08d99d8e2bb432fa22e53&quot; : [{&quot;id&quot; : &quot;l7tdwwu80hkw3ik9&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;35cf543f3649b7bd3c2abc94e7571c75&quot; : [{&quot;id&quot; : &quot;lazuy1arnk8uayvi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-social&quot;, &quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-social/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-social/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view Social website statistics by state&quot;, &quot;listen&quot; : {&quot;state-selected&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Social Media Usage&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}], &quot;8d4310e2425d99d2adb01a56f8b8164e&quot; : [{&quot;id&quot; : &quot;wket0pairqgjh5mi&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-map&quot;, &quot;title&quot; : &quot;USA Map&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-map/index.png&quot;, &quot;settings&quot; : {&quot;personalize&quot; : true}, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-map/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view and select US states&quot;, &quot;notify&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;This notifies selected state&quot;}, &quot;cancel&quot; : {&quot;type&quot; : &quot;boolean&quot;, &quot;description&quot; : &quot;This notifies cancellation of state selection&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Map&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {}, &quot;locale_titles&quot; : {}}, &quot;hasCustomUserPrefView&quot; : true, &quot;hasCustomFullView&quot; : true}], &quot;8f66a5b932f1572572bcb58fa5d08885&quot; : [{&quot;id&quot; : &quot;xnyjrborhfwp14i&quot;, &quot;content&quot; : {&quot;id&quot; : &quot;usa-business-revenue&quot;, &quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;type&quot; : &quot;gadget&quot;, &quot;thumbnail&quot; : &quot;store://gadget/usa-business-revenue/index.png&quot;, &quot;data&quot; : {&quot;url&quot; : &quot;store://gadget/usa-business-revenue/index.xml&quot;}, &quot;description&quot; : &quot;Allows to view revenue by companies in US&quot;, &quot;listen&quot; : {&quot;state&quot; : {&quot;type&quot; : &quot;address&quot;, &quot;description&quot; : &quot;Used to filter based on state&quot;}}, &quot;styles&quot; : {&quot;title&quot; : &quot;USA Business Revenue&quot;, &quot;borders&quot; : true}, &quot;options&quot; : {&quot;gadget-status&quot; : {&quot;type&quot; : &quot;HIDDEN&quot;, &quot;title&quot; : &quot;gadget-status&quot;, &quot;value&quot; : &quot;not-wired&quot;, &quot;options&quot; : [], &quot;required&quot; : false}}, &quot;locale_titles&quot; : {}}}]}, &quot;anon&quot; : {}}}], &quot;identityServerUrl&quot; : &quot;&quot;, &quot;accessTokenUrl&quot; : &quot;&quot;, &quot;apiKey&quot; : &quot;&quot;, &quot;apiSecret&quot; : &quot;&quot;, &quot;theme&quot; : &quot;&quot;, &quot;isUserCustom&quot; : false, &quot;isEditorEnable&quot; : true, &quot;banner&quot; : {&quot;globalBannerExists&quot; : false, &quot;customBannerExists&quot; : false}, &quot;landing&quot; : &quot;landing&quot;, &quot;isanon&quot; : false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/apis/dashboards/${dash}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Load viewer" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Load Dashboard Viewer" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">portal/dashboards/${dash}/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.82Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://10.100.7.105:9443/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">13.200000000000001</stringProp>
              <stringProp name="ConstantTimer.delay">26.400000000000002</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 4" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 5" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 6" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 7" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 8" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 9" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 10" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 11" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 12" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 13" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 14" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 15" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1.6</stringProp>
              <stringProp name="ConstantTimer.delay">3.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 16" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 17" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 18" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 19" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 20" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 21" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 22" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1.6</stringProp>
              <stringProp name="ConstantTimer.delay">3.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 23" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1.2000000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">2.4000000000000004</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 24" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 25" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1.6</stringProp>
              <stringProp name="ConstantTimer.delay">3.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 26" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 27" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 28" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 29" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 30" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 31" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 32" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 33" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 34" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 35" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 36" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 37" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 38" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 39" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 40" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 41" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 42" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 43" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 44" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 45" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 46" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 47" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 48" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1.6</stringProp>
              <stringProp name="ConstantTimer.delay">3.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 49" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 50" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 51" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 52" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 53" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 54" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 55" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 56" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 57" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 58" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 59" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 60" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 61" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 62" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1.2000000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">2.4000000000000004</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 63" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 64" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 65" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 66" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 67" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 68" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 69" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 70" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 71" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1.2000000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">2.4000000000000004</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 72" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 73" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 74" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 75" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 76" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1.2000000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">2.4000000000000004</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 77" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 78" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 79" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 80" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 81" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 82" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 83" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 84" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 85" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 86" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 87" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 88" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 89" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/subscriber/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 90" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 91" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 92" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/publisher/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">2.0</stringProp>
              <stringProp name="ConstantTimer.delay">4.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 93" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.8</stringProp>
              <stringProp name="ConstantTimer.delay">1.6</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 94" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1.2000000000000002</stringProp>
              <stringProp name="ConstantTimer.delay">2.4000000000000004</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 95" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 96" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/date-range-picker/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 97" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/textbox/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1.6</stringProp>
              <stringProp name="ConstantTimer.delay">3.2</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 98" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-map/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 99" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-business-revenue/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.4</stringProp>
              <stringProp name="ConstantTimer.delay">0.8</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="render gadget 100" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;method&quot;:&quot;gadgets.metadata&quot;,&quot;id&quot;:&quot;gadgets.metadata&quot;,&quot;params&quot;:{&quot;container&quot;:&quot;default&quot;,&quot;ids&quot;:[&quot;https://localhost:9443/portal/store/carbon.super/gadget/usa-social/index.xml&quot;],&quot;fields&quot;:[&quot;iframeUrls&quot;,&quot;modulePrefs.*&quot;,&quot;needsTokenRefresh&quot;,&quot;userPrefs.*&quot;,&quot;views.preferredHeight&quot;,&quot;views.preferredWidth&quot;,&quot;expireTimeMs&quot;,&quot;responseTimeMs&quot;,&quot;rpcServiceIds&quot;,&quot;tokenTTL&quot;],&quot;language&quot;:&quot;en&quot;,&quot;country&quot;:&quot;US&quot;,&quot;userId&quot;:&quot;@viewer&quot;,&quot;groupId&quot;:&quot;@self&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">shindig/rpc?st=-1%3A-1%3A*%3A*%3A*%3A0%3Adefault</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">2</stringProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0(X11;Linuxx86_64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/48.0.2564.97Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://dspref.wso2.com/portal/dashboards/1?editor=true</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0.0</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename">/home/marcus/Documents/Peformance Tests/Reports/Designer/Response Time Graph for 100 user</stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.LatenciesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Latencies Over Time" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deleting Dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">portal/apis/dashboards/${dash}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThroughputVsThreadsGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transaction Throughput vs Threads" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>false</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <threadCounts>true</threadCounts>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <longProp name="interval_grouping">500</longProp>
            <boolProp name="graph_aggregated">false</boolProp>
            <stringProp name="include_sample_labels"></stringProp>
            <stringProp name="exclude_sample_labels"></stringProp>
            <stringProp name="start_offset"></stringProp>
            <stringProp name="end_offset"></stringProp>
            <boolProp name="include_checkbox_state">false</boolProp>
            <boolProp name="exclude_checkbox_state">false</boolProp>
          </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
